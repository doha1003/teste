name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: |
        npm ci || npm install || echo "No package.json found, continuing..."
        
    - name: Lint and validate files
      run: |
        # Basic HTML validation
        echo "Validating HTML files..."
        find . -name "*.html" -not -path "./node_modules/*" -not -path "./.git/*" -not -path "./backup/*" | head -20 | while read file; do
          echo "Validating $file"
          if ! grep -q "<!DOCTYPE html>" "$file"; then
            echo "Warning: $file missing DOCTYPE"
          fi
        done
        
        # Check for potential broken links
        echo "Checking for potential 404 errors..."
        find . -name "*.html" -not -path "./node_modules/*" -not -path "./.git/*" -not -path "./backup/*" | xargs grep -h 'href="[^h]' | grep -o 'href="[^"]*"' | sort -u | head -10
        
    - name: Build and optimize
      run: |
        # Ensure critical minified files exist
        if [ ! -f "js/main.min.js" ] && [ -f "js/main.js" ]; then
          echo "Creating main.min.js from main.js"
          cp js/main.js js/main.min.js
        fi
        
        if [ ! -f "js/security.min.js" ] && [ -f "js/security.js" ]; then
          echo "Creating security.min.js from security.js" 
          cp js/security.js js/security.min.js
        fi
        
        if [ ! -f "js/bundle.min.js" ]; then
          echo "Creating bundle.min.js"
          if [ -f "js/security.js" ] && [ -f "js/main.js" ]; then
            cat js/security.js js/main.js > js/bundle.min.js
          else
            echo "/* Bundle placeholder */" > js/bundle.min.js
          fi
        fi
        
    - name: Replace API key in gemini-api.js
      run: |
        echo "Replacing API key..."
        if [ -n "${{ secrets.GEMINI_API_KEY }}" ] && [ -f "js/gemini-api.js" ]; then
          sed -i "s/const GEMINI_API_KEY = 'PLACEHOLDER';/const GEMINI_API_KEY = '${{ secrets.GEMINI_API_KEY }}';/g" js/gemini-api.js
          echo "API key replaced successfully"
        else
          echo "Warning: GEMINI_API_KEY secret is not set or gemini-api.js not found"
        fi
        
    - name: Verify critical files
      run: |
        # Check that critical files exist
        critical_files=(
          "css/styles.css"
          "css/mobile-fixes.css"
          "includes/navbar.html"
          "includes/footer.html"
          "index.html"
        )
        
        for file in "${critical_files[@]}"; do
          if [ -f "$file" ]; then
            echo "✓ $file exists ($(wc -c < "$file") bytes)"
          else
            echo "✗ $file missing - this may cause 404 errors"
          fi
        done
        
    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: '.'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
      
    - name: Verify deployment
      run: |
        echo "Deployment completed successfully"
        echo "Site URL: ${{ steps.deployment.outputs.page_url }}"
        
        # Wait for deployment to propagate
        sleep 30
        
        # Basic health check
        if curl -f -s -o /dev/null "${{ steps.deployment.outputs.page_url }}"; then
          echo "✓ Site is accessible"
        else
          echo "⚠ Site may not be immediately accessible (this is normal)"
        fi