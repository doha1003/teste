/**
 * 만세력 데이터 - 사주 계산을 위한 천간지지 데이터
 * 
 * 이 파일은 사주팔자 계산에 필요한 만세력 데이터를 포함합니다.
 * - 60갑자 순환
 * - 천간(天干) 10개
 * - 지지(地支) 12개
 * - 절기 정보
 * - 월간지 계산 데이터
 */

// 전역 객체로 노출
window.ManseryeokData = (function() {
    
    // 천간 (天干) - 10개
    const CHEONGAN = {
        names: ['갑', '을', '병', '정', '무', '기', '경', '신', '임', '계'],
        hanja: ['甲', '乙', '丙', '丁', '戊', '己', '庚', '辛', '壬', '癸'],
        elements: ['목', '목', '화', '화', '토', '토', '금', '금', '수', '수'],
        yinyang: ['양', '음', '양', '음', '양', '음', '양', '음', '양', '음']
    };

    // 지지 (地支) - 12개
    const JIJI = {
        names: ['자', '축', '인', '묘', '진', '사', '오', '미', '신', '유', '술', '해'],
        hanja: ['子', '丑', '寅', '卯', '辰', '巳', '午', '未', '申', '酉', '戌', '亥'],
        animals: ['쥐', '소', '호랑이', '토끼', '용', '뱀', '말', '양', '원숭이', '닭', '개', '돼지'],
        elements: ['수', '토', '목', '목', '토', '화', '화', '토', '금', '금', '토', '수'],
        yinyang: ['양', '음', '양', '음', '양', '음', '양', '음', '양', '음', '양', '음']
    };

    // 60갑자 순환
    const GAPJA_CYCLE = [
        '갑자', '을축', '병인', '정묘', '무진', '기사', '경오', '신미', '임신', '계유',
        '갑술', '을해', '병자', '정축', '무인', '기묘', '경진', '신사', '임오', '계미',
        '갑신', '을유', '병술', '정해', '무자', '기축', '경인', '신묘', '임진', '계사',
        '갑오', '을미', '병신', '정유', '무술', '기해', '경자', '신축', '임인', '계묘',
        '갑진', '을사', '병오', '정미', '무신', '기유', '경술', '신해', '임자', '계축',
        '갑인', '을묘', '병진', '정사', '무오', '기미', '경신', '신유', '임술', '계해'
    ];

    // 24절기 정보
    const JEOLGI = {
        names: [
            '소한', '대한', '입춘', '우수', '경칩', '춘분',
            '청명', '곡우', '입하', '소만', '망종', '하지',
            '소서', '대서', '입추', '처서', '백로', '추분',
            '한로', '상강', '입동', '소설', '대설', '동지'
        ],
        // 절기별 대략적인 날짜 (양력)
        dates: [
            { month: 1, day: 5 },   // 소한
            { month: 1, day: 20 },  // 대한
            { month: 2, day: 4 },   // 입춘
            { month: 2, day: 19 },  // 우수
            { month: 3, day: 6 },   // 경칩
            { month: 3, day: 21 },  // 춘분
            { month: 4, day: 5 },   // 청명
            { month: 4, day: 20 },  // 곡우
            { month: 5, day: 6 },   // 입하
            { month: 5, day: 21 },  // 소만
            { month: 6, day: 6 },   // 망종
            { month: 6, day: 21 },  // 하지
            { month: 7, day: 7 },   // 소서
            { month: 7, day: 23 },  // 대서
            { month: 8, day: 8 },   // 입추
            { month: 8, day: 23 },  // 처서
            { month: 9, day: 8 },   // 백로
            { month: 9, day: 23 },  // 추분
            { month: 10, day: 8 },  // 한로
            { month: 10, day: 23 }, // 상강
            { month: 11, day: 7 },  // 입동
            { month: 11, day: 22 }, // 소설
            { month: 12, day: 7 },  // 대설
            { month: 12, day: 22 }  // 동지
        ]
    };

    // 월간지 계산을 위한 테이블
    const MONTH_GAPJA_TABLE = {
        // 연간에 따른 월간 계산 (갑기년, 을경년, 병신년, 정임년, 무계년)
        '갑': ['병인', '정묘', '무진', '기사', '경오', '신미', '임신', '계유', '갑술', '을해', '병자', '정축'],
        '을': ['무인', '기묘', '경진', '신사', '임오', '계미', '갑신', '을유', '병술', '정해', '무자', '기축'],
        '병': ['경인', '신묘', '임진', '계사', '갑오', '을미', '병신', '정유', '무술', '기해', '경자', '신축'],
        '정': ['임인', '계묘', '갑진', '을사', '병오', '정미', '무신', '기유', '경술', '신해', '임자', '계축'],
        '무': ['갑인', '을묘', '병진', '정사', '무오', '기미', '경신', '신유', '임술', '계해', '갑자', '을축'],
        '기': ['병인', '정묘', '무진', '기사', '경오', '신미', '임신', '계유', '갑술', '을해', '병자', '정축'],
        '경': ['무인', '기묘', '경진', '신사', '임오', '계미', '갑신', '을유', '병술', '정해', '무자', '기축'],
        '신': ['경인', '신묘', '임진', '계사', '갑오', '을미', '병신', '정유', '무술', '기해', '경자', '신축'],
        '임': ['임인', '계묘', '갑진', '을사', '병오', '정미', '무신', '기유', '경술', '신해', '임자', '계축'],
        '계': ['갑인', '을묘', '병진', '정사', '무오', '기미', '경신', '신유', '임술', '계해', '갑자', '을축']
    };

    // 시간지 계산을 위한 테이블
    const HOUR_JIJI = [
        '자', '축', '인', '묘', '진', '사', 
        '오', '미', '신', '유', '술', '해'
    ];

    // 시간 범위
    const HOUR_RANGES = [
        { start: 23, end: 1 },   // 자시
        { start: 1, end: 3 },    // 축시
        { start: 3, end: 5 },    // 인시
        { start: 5, end: 7 },    // 묘시
        { start: 7, end: 9 },    // 진시
        { start: 9, end: 11 },   // 사시
        { start: 11, end: 13 },  // 오시
        { start: 13, end: 15 },  // 미시
        { start: 15, end: 17 },  // 신시
        { start: 17, end: 19 },  // 유시
        { start: 19, end: 21 },  // 술시
        { start: 21, end: 23 }   // 해시
    ];

    // 계산 함수들
    
    /**
     * 연도로 년간지 계산
     */
    function getYearGapja(year) {
        // 갑자년이 1984년 기준으로 계산
        const baseYear = 1984;
        const diff = year - baseYear;
        let index = diff % 60;
        if (index < 0) index += 60;
        return GAPJA_CYCLE[index];
    }

    /**
     * 월간지 계산
     */
    function getMonthGapja(yearGan, month) {
        // 연간의 첫 글자를 가져옴
        const gan = yearGan.charAt(0);
        // 음력 월을 1부터 시작하는 인덱스로 변환 (배열은 0부터)
        const monthIndex = month - 1;
        return MONTH_GAPJA_TABLE[gan][monthIndex];
    }

    /**
     * 일간지 계산
     */
    function getDayGapja(year, month, day) {
        // 그레고리력 기준 일수 계산
        const baseDate = new Date(1900, 0, 1); // 1900년 1월 1일 (경자일)
        const targetDate = new Date(year, month - 1, day);
        const diffDays = Math.floor((targetDate - baseDate) / (1000 * 60 * 60 * 24));
        
        let index = diffDays % 60;
        if (index < 0) index += 60;
        return GAPJA_CYCLE[index];
    }

    /**
     * 시간지 계산
     */
    function getHourGapja(hour) {
        // 시간대별 지지 반환
        if (hour === 0 || hour === 23) return HOUR_JIJI[0]; // 자시
        const jijiIndex = Math.floor((hour + 1) / 2);
        return HOUR_JIJI[jijiIndex];
    }

    // 공개 API
    return {
        CHEONGAN,
        JIJI,
        GAPJA_CYCLE,
        JEOLGI,
        MONTH_GAPJA_TABLE,
        HOUR_JIJI,
        HOUR_RANGES,
        getYearGapja,
        getMonthGapja,
        getDayGapja,
        getHourGapja
    };
})();