/* Hero Section Animation Fix */
/* 이 파일은 hero 섹션의 애니메이션 충돌을 해결합니다 */

/* fade-in 클래스의 초기 상태 설정 */
.hero .fade-in {
    opacity: 0;
    transform: translateY(20px);
    transition: opacity 0.6s ease-out, transform 0.6s ease-out;
}

/* animated 클래스가 추가되면 애니메이션 실행 */
.hero .fade-in.animated {
    opacity: 1 !important;
    transform: translateY(0) !important;
}

/* 순차적 애니메이션 지연 효과 */
.hero .stagger-1 {
    transition-delay: 0.1s;
}

.hero .stagger-2 {
    transition-delay: 0.2s;
}

.hero .stagger-3 {
    transition-delay: 0.3s;
}

.hero .stagger-4 {
    transition-delay: 0.4s;
}

/* Hero 배지 애니메이션 */
.hero-badge {
    animation: pulse 2s infinite;
}

@keyframes pulse {
    0%, 100% {
        transform: scale(1);
    }
    50% {
        transform: scale(1.05);
    }
}

/* 모바일에서의 애니메이션 성능 최적화 */
@media (max-width: 768px) {
    .hero .fade-in {
        transform: translateY(10px); /* 모바일에서는 이동 거리 감소 */
    }
}

/* 애니메이션 선호도 설정 존중 */
@media (prefers-reduced-motion: reduce) {
    .hero .fade-in {
        transition: none;
    }
    
    .hero-badge {
        animation: none;
    }
}

/* 인라인 스타일 오버라이드 방지 */
.hero * {
    transition-property: opacity, transform !important;
}

/* Hero 섹션의 shape 애니메이션이 fade-in과 충돌하지 않도록 설정 */
.hero-shapes .shape {
    will-change: transform; /* 성능 최적화 */
}

/* 스크롤 인디케이터 애니메이션 */
.scroll-indicator {
    animation: bounce 2s ease-in-out infinite;
}

@keyframes bounce {
    0%, 20%, 50%, 80%, 100% {
        transform: translateY(0);
    }
    40% {
        transform: translateY(-10px);
    }
    60% {
        transform: translateY(-5px);
    }
}